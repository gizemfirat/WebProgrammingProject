@model List<Entities.ViewModels.ProcessDetailViewModel>

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />
  <title>Document</title>
</head>

<body>
  <div class="section-calendar">
    <div id="calendar"></div>

    <div id="bookingModal" class="modal">
      <div class="modal-content">
        <div class="modal-header">
          <span class="close-button" onclick="closeModal()">x</span>
          <h2 class="heading-fifth">Confirm Booking</h2>
        </div>
        <div class="modal-body u-margin-bottom-2">
          <p id="modal-details" class="paragraph big"></p>
        </div>
        <div class="modal-footer">
          <button class="btn btn-outlined" onclick="closeModal()">Cancel</button>
          <button class="btn btn-primary" id="confirmButton">Book</button>
        </div>
      </div>
    </div>

  </div>


  <script>
    document.addEventListener('DOMContentLoaded', function () {
      var calendarEl = document.getElementById('calendar');

      var events = @Html.Raw(Json.Serialize(Model.Select(x => new
      {
        id = x.AvaliableTimeId,
        title = @x.ProcessName + " " + @x.WorkerName,
        start = x.AvaliableTime.ToString("yyyy-MM-ddTHH:mm:ss"),
        end = x.EndTime.ToString("yyyy-MM-ddTHH:mm:ss"),
        description = @x.Price + "TL"
      })));

      var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'timeGridWeek',
        locale: 'tr',
        events: events,
        eventClick: function (arg) {
          openModal(arg.event);
        }
      });
      calendar.render();
    });
  </script>
  <script>
    function bookAppointment(avaliableTimeId) {
      fetch(`/api/Appointment/BookAppointment`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ avaliableTimeId: avaliableTimeId })
      })
        .then(async response => {
          if (response.ok) {
            alert("Appointment successfully booked!");
            location.reload();
          } else {
            const errorMessage = await response.text();
            console.error("Error:", errorMessage);
            alert("Failed to book the appointment: " + errorMessage);
          }
        })
        .catch(error => {
          console.error("Fetch error:", error);
          alert("An error occurred while booking the appointment.");
        });
    }

    function openModal(event) {
      document.getElementById("modal-details").innerHTML = `
            <strong>Process - Employee:</strong> ${event.title}<br>
            <strong>Start:</strong> ${event.start.toLocaleString()}<br>
            <strong>End:</strong> ${event.end ? event.end.toLocaleString() : 'Belirtilmedi'}<br>
            <strong>Price:</strong> ${event.extendedProps.description}
        `;
      document.getElementById("confirmButton").onclick = function () {
        bookAppointment(event.id);
      };
      document.getElementById("bookingModal").style.display = "block";
    }

    function closeModal() {
      document.getElementById("bookingModal").style.display = "none";
    }
  </script>

  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.js"></script>
</body>

</html>