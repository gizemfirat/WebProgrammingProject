@model IEnumerable<Entities.ViewModels.AppointmentViewModel>

<div class="section-appointments">
  <h2 class="heading-fifth"> My appointments</h2>
  <table class="appointments-table">
    <thead>
      <tr>
        <th>Date</th>
        <th>Worker</th>
        <th>Profession</th>
        <th>Price</th>
        <th></th>
      </tr>
    </thead>
    <tbody>
      @foreach (var appointment in Model)
      {
        <tr>
          <td>@appointment.Date.ToString("yyyy-MM-dd HH:mm")</td>
          <td>@appointment.WorkerName</td>
          <td>@appointment.ProfessionName</td>
          <td>@appointment.Price tl</td>
          <td>
            <button class="btn btn-primary" onclick="openModal(@appointment.AppointmentId, '@appointment.Date', '@appointment.WorkerName')">
              Delete
            </button>
          </td>
        </tr>
      }
    </tbody>
  </table>
</div>

<div id="deleteModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <span class="close-button" onclick="closeModal()">x</span>
      <h2 class="heading-fifth"> Confirm Delete</h2>
    </div>
    <div class="modal-body">
      <p class="modal-paragraph u-margin-bottom-2"> Are you sure you want to delete this appointment?</p>
      <p class="modal-paragraph" id="modal-appointment-details"></p>
    </div>
    <div class="modal-footer">
      <button class="btn btn-outlined" onclick="closeModal()">Cancel</button>
      <button class="btn btn-primary" id="confirmDeleteButton">Delete</button>
    </div>
  </div>
</div>

<script>
  let deleteAppointmentId;

  function openModal(appointmentId, date, workerName) {
    deleteAppointmentId = appointmentId;
    document.getElementById("modal-appointment-details").textContent = "Date: " + date +  ", " + "Worker: " + workerName;
    document.getElementById("deleteModal").style.display = "block";
  }

  function closeModal() {
    document.getElementById("deleteModal").style.display = "none";
  }

  document.getElementById("confirmDeleteButton").addEventListener("click", async () => {
    if(!deleteAppointmentId) return;

    try {
      const response = await fetch(`/api/appointment/${deleteAppointmentId}`, {method: "DELETE"});
      if(response.ok) {
        alert("Appointment deleted successfully.");
        location.reload();
      } else {
        alert("Failed to delete thead appointment.");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("An error occured!");
    }

    closeModal();
  });
</script>