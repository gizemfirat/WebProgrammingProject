@model IEnumerable<Entities.ViewModels.AppointmentDto>


<table class="table">
  <thead>
    <tr>
      <th>Date</th>
      <th>Employee</th>
      <th>Customer</th>
      <th>Process</th>
      <th>Established Time</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var appointment in Model)
    {
      <tr>
        <td>@appointment.Date</td>
        <td>@appointment.WorkerFullName</td>
        <td>@appointment.CustomerFullName</td>
        <td>@appointment.ProcessName</td>
        <td>@appointment.EstablishedTime</td>
        <td>
          <button class="btn btn-outlined delete-button" data-id="@appointment.AppointmentId">Delete</button>
        </td>

      </tr>
    }
  </tbody>
</table>

<div id="delete-modal" class="modal">
  <div class="modal-content">
    <span class="close-button">&times;</span>
    <div class="modal-header">
      <h3 class="heading-fifth">Confirm Action</h3>
    </div>
    <div class="modal-body">
      <p class="paragraph big">Are you sure you want to delete this?</p>
    </div>
    <div class="modal-footer">
      <button id="cancel-button" class="btn btn-outlined">Cancel</button>
      <button id="confirm-delete-button" class="btn btn-primary">Delete</button>
    </div>
  </div>
</div>

<script>
  const modal = document.getElementById('delete-modal');
  const closeButton = document.querySelector('.close-button');
  const cancelButton = document.getElementById('cancel-button');
  const confirmDeleteButton = document.getElementById('confirm-delete-button');
  let appointmentIdToDelete = null;

  const deleteButtons = document.querySelectorAll('.delete-button');


  const openModal = (id) => {
    appointmentIdToDelete = id;
    modal.style.display = 'block';
  };


  const closeModal = () => {
    appointmentIdToDelete = null;
    modal.style.display = 'none';
  };

  deleteButtons.forEach(button => {
    button.addEventListener('click', () => {
      const id = button.getAttribute('data-id');
      openModal(id);
    });
  });

  closeButton.addEventListener('click', closeModal);
  cancelButton.addEventListener('click', closeModal);

  confirmDeleteButton.addEventListener('click', () => {
    if (!appointmentIdToDelete) return;

    fetch(`/Appointment/DeleteAppointment/${appointmentIdToDelete}`, {
      method: 'DELETE',
    })
    .then(response => {
      if (response.ok) {
        alert("Appointment deleted successfully!");
        location.reload();
      } else {
        return response.text().then((text) => {
          alert(`Error: ${text}`);
        });
      }
    })
    .catch(error => console.error('Error:', error))
    .finally(closeModal);
  });

  window.addEventListener('click', (event) => {
    if (event.target === modal) {
      closeModal();
    }
  });
</script>
