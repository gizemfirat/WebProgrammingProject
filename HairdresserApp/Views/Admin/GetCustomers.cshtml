@model IEnumerable<Entities.Models.Customer>

<div class="section-admin-panel u-margin-bottom-2">
  <button id="openModalButton" class="btn btn-primary u-margin-bottom-2">Add Customer</button>
</div>
<table class="table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Surname</th>
      <th>Email</th>
      <th>Password</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var customer in Model)
    {
      <tr>
        <td>@customer.Name</td>
        <td>@customer.Surname</td>
        <td class="no-transform">@customer.Email</td>
        <td class="no-transform">@customer.Password</td>
        <td>
          <button class="btn btn-primary edit-button u-margin-bottom-small" data-id="@customer.Id" data-name="@customer.Name"
            data-surname="@customer.Surname" data-email="@customer.Email" data-password="@customer.Password">Edit</button>
          <button class="btn btn-outlined delete-button" data-id="@customer.Id">Delete</button>
        </td>

      </tr>
    }
  </tbody>
</table>

<div id="createCustomerModal" class="modal" data-id="">
  <div class="modal-content">
    <div class="modal-header">
      <h5 class="heading-fifth" id="form-title">Add a new Customer</h5>
      <span class="close-button" id="closeModalButton">&times;</span>
    </div>
    <form id="createCustomerForm">
      <div class="modal-body">
        <div class="form-group">
          <input type="hidden" id="Id" name="Id" />
        </div>
        <div class="form-group">
          <label for="Name" class="form-label">Name</label>
          <input type="text" id="Name" name="Name" class="form-input" required />
        </div>
        <div class="form-group">
          <label for="Surname" class="form-label">Surname</label>
          <input type="text" id="Surname" name="Surname" class="form-input" />
        </div>
        <div class="form-group">
          <label for="Email" class="form-label">Email</label>
          <input type="email" id="Email" name="Email" class="form-input" />
        </div>
        <div class="form-group">
          <label for="Password" class="form-label">Password</label>
          <input type="text" id="Password" name="Password" class="form-input" />
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Add</button>
      </div>
    </form>
  </div>
</div>

<script>
  const modal = document.getElementById('createCustomerModal');
  const openModalButton = document.getElementById('openModalButton');
  const closeModalButton = document.getElementById('closeModalButton');


  openModalButton.addEventListener('click', () => {
    modal.style.display = 'block';
  });

  closeModalButton.addEventListener('click', () => {
    modal.style.display = 'none';
  });

  window.addEventListener('click', (event) => {
    if (event.target === modal) {
      modal.style.display = 'none';
    }
  });

  const editButtons = document.querySelectorAll('.edit-button');
  const submitButton = document.querySelector('#createCustomerForm button[type="submit"]');
  const title = document.getElementById('form-title');

  editButtons.forEach(button => {
    button.addEventListener('click', () => {
      const id = button.getAttribute('data-id');
      const name = button.getAttribute('data-name');
      const surname = button.getAttribute('data-surname');
      const email = button.getAttribute('data-email');
      const password = button.getAttribute('data-password');
      const role = button.getAttribute('data-role');

      document.getElementById('Name').value = name;
      document.getElementById('Surname').value = surname;
      document.getElementById('Email').value = email;
      document.getElementById('Password').value = Password;
      document.getElementById('Id').value = id;

      submitButton.textContent = 'Update';
      title.textContent = 'Update Customer';
      modal.style.display = 'block';
    });
  });


  document.getElementById('createCustomerForm').addEventListener('submit', (event) => {
    event.preventDefault();

    const formData = new FormData(event.target);
    const id = formData.get('Id');


    const customerData = {
      Name: formData.get('Name'),
      Surname: formData.get('Surname'),
      Email: formData.get('Email'),
      Password: formData.get('Password'),
    };

    if (id) {
      customerData.Id = id;
    }

    const url = id ? '/Customer/Update' : '/Customer/Create';
    const method = id ? 'PUT' : 'POST';

    fetch(url, {
      method: method,
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(customerData),
    })
      .then((response) => {
        if (response.ok) {
          alert(id ? 'Customer succesfully Updated!' : 'Customer successfully added!');
          location.reload();
        } else {
          return response.text().then((text) => {
            console.error('Server Error:', text);
            alert('Error occured: ' + text);
          })
        }
      })
      .catch((error) => console.error('Network Error:', error));
  });

</script>
<script>
  const deleteButtons = document.querySelectorAll('.delete-button');

  deleteButtons.forEach(button => {
    button.addEventListener('click', () => {
      const id = button.getAttribute('data-id');
      const confirmDelete = confirm("Are you sure you want to delete this customer? All appointments will be deleted along with the customer.");
      if (!confirm) return;

      fetch(`/Customer/DeleteCustomer/${id}`, {
        method: 'DELETE',
      })
        .then(response => {
          if (response.ok) {
            alert("Customer deleted successfully!");
            location.reload();
          } else {
            return response.text().then((text) => {
              alert(`Error: ${text}`);
            });
          }
        })
        .catch(error => console.error('Error:', error));
    });
  });
</script>