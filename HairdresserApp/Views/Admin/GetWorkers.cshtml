@model IEnumerable<Entities.ViewModels.WorkerViewModel>

<div class="section-workers">
  <button id="openModalButton" class="btn btn-primary">Add Worker</button>
</div>
<table class="table">
  <thead>
    <tr>
      <th>Employee Name</th>
      <th>Employee Surname</th>
      <th>Processes</th>
      <th>Salary</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var worker in Model)
    {
      <tr>
        <td>@worker.Name</td>
        <td>@worker.Surname</td>
        <td>
          @foreach (var process in worker.Processes)
          {
            <p class="paragraph">- @process.Name</p>
          }
        </td>
        <td>@worker.Salary â‚º</td>
      </tr>
    }
  </tbody>
</table>

<div id="createWorkerModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h5 class="heading-fifth">Add a new Employee</h5>
      <span class="close-button" id="closeModalButton">&times;</span>
    </div>
    <form id="createWorkerForm">
      <div class="modal-body">
        <div class="form-group">
          <label for="Name" class="form-label">Name</label>
          <input type="text" id="Name" name="Name" class="form-input" required />
        </div>
        <div class="form-group">
          <label for="Surname" class="form-label">Surname</label>
          <input type="text" id="Surname" name="Surname" class="form-input" required />
        </div>
        <div class="form-group">
          <label for="Salary" class="form-label">Salary</label>
          <input type="text" id="Salary" name="Salary" class="form-input" required />
        </div>
        <div class="form-group">
          <label for="processes" class="form-label">Processes</label>
          <select id="processes" name="ProcessIds" class="form-input" multiple></select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Add</button>
      </div>
    </form>
  </div>
</div>

<script>
  const modal = document.getElementById('createWorkerModal');
  const openModalButton = document.getElementById('openModalButton');
  const closeModalButton = document.getElementById('closeModalButton');

  
  openModalButton.addEventListener('click', () => {
    modal.style.display = 'block';
  });

  closeModalButton.addEventListener('click', () => {
    modal.style.display = 'none';
  });

  window.addEventListener('click', (event) => {
    if(event.target === modal) {
      modal.style.display = 'none';
    }
  });

 document.addEventListener('DOMContentLoaded', () => {
    fetch('/Process/GetProcesses') 
        .then((response) => response.json())
        .then((data) => {
            const processesDropdown = document.getElementById('processes');
            data.forEach((process) => {
                const option = document.createElement('option');
                option.value = process.id;
                option.textContent = process.name;
                processesDropdown.appendChild(option);
            });
        });
});

document.getElementById('createWorkerForm').addEventListener('submit', (event) => {
  event.preventDefault();

  const formData = new FormData(event.target);
  const selectedProcesses = Array.from(
    document.getElementById('processes').selectedOptions
  ).map(option => ({
    Id: parseInt(option.value),
    Name: option.textContent.trim()
  }));

  const workerData = {
    Name: formData.get('Name'),
    Surname: formData.get('Surname'),
    Salary: formData.get('Salary'),
    Processes: selectedProcesses
  };

  console.log(workerData);

  fetch('/Worker/Create', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(workerData),
  })
  .then((response) => {
      console.log(workerData);
    if(response.ok) {
      alert('Employee successfully added!');
      location.reload();
    } else {
      return response.text().then((text) => {
        console.error('Server Error:', text);
        alert('Error occured: ' + text);
      })
    }
  })
  .catch((error) => console.error('Network Error:', error));
});

</script>